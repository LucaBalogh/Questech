{"ast":null,"code":"var _jsxFileName = \"D:\\\\InternshipAccesa\\\\Questech\\\\src\\\\rankingpage\\\\RankingPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { CommandBar, DetailsList, Stack, StackItem, ThemeProvider } from \"@fluentui/react\";\nimport { DetailsListLayoutMode, Selection, SelectionMode } from \"@fluentui/react/lib/DetailsList\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../auth/AuthProvider\";\nimport { VIEW_QUESTPAGE, VIEW_BADGES, LOGOUT } from \"../utils/generalConstants\";\nimport { LoginService } from \"../utils/service\";\nimport { getViewportAsPixels, getByRequestUrl, setLoggedUser, getDefaultUser, setSelectedUser } from \"../utils/utilsMethods\";\nimport { commandBarStyles, detailsListColumnStyle, itemStyle, enabledMenuItemStyle, setGapBetweenHeaders, setGapBetweenHeadersAndDetailsList, transparentTheme, itemStyleForLastColumn, setGapBetweenHeadersAndUserInfo } from \"./RankingPage.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FIRST_NAME_COLUMN = \"First Name\";\nconst LAST_NAME_COLUMN = \"Second Name\";\nconst TOKENS_COLUMN = \"Tokens\";\n\nconst getColumnName = (firstName, lastName, tokens, name) => {\n  return name === firstName ? firstName : name === lastName ? lastName : name === tokens ? tokens : name;\n};\n\nconst getFieldName = columnName => {\n  return columnName === FIRST_NAME_COLUMN ? \"firstName\" : columnName === LAST_NAME_COLUMN ? \"lastName\" : columnName === TOKENS_COLUMN ? \"tokens\" : \"\";\n};\n\nconst getColumn = (pageWidth, name) => {\n  return {\n    key: name,\n    name: getColumnName(FIRST_NAME_COLUMN, LAST_NAME_COLUMN, TOKENS_COLUMN, name),\n    fieldName: getFieldName(name),\n    minWidth: getViewportAsPixels(pageWidth, 10),\n    maxWidth: getViewportAsPixels(pageWidth, 20),\n    isResizable: true,\n    isMultiline: true,\n    styles: detailsListColumnStyle\n  };\n};\n\nconst getColumns = (pageWidth, names) => {\n  return names.map(name => getColumn(pageWidth, name));\n};\n\nexport const getListItemFromMainPage = user => {\n  return {\n    id: user.id,\n    firstName: user.firstName,\n    lastName: user.lastName,\n    tokens: user.tokens\n  };\n};\n\nconst renderItemColumn = (item, index, column) => {\n  const fieldContent = item[column.fieldName];\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: column.fieldName !== \"created\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: itemStyle,\n      children: fieldContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      className: itemStyleForLastColumn,\n      children: fieldContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\nconst getUserMain = allUsers => {\n  return allUsers.map(item => getListItemFromMainPage(item));\n};\n\nconst getMenuItem = name => {\n  return {\n    key: name,\n    text: name,\n    iconProps: {\n      iconName: name\n    }\n  };\n};\n\nconst getMenuItems = names => {\n  return names.map(name => getMenuItem(name));\n};\n\nconst RankingPage = props => {\n  _s();\n\n  const {\n    isAuthenticated\n  } = useAuth();\n  const navigate = useNavigate();\n  const [items, setItems] = useState([]);\n  const [user, setUserMain] = useState([]);\n  const [selectedItems, setSelectedItems] = useState(undefined);\n  const [selection] = useState(() => new Selection({\n    onSelectionChanged: () => {\n      const selectedItems = selection.getSelection();\n      const selected = selectedItems[0];\n      setSelectedUser(selected);\n      setSelectedItems(selectedItems);\n    }\n  }));\n  const columns = getColumns(props.pageWidth, [FIRST_NAME_COLUMN, LAST_NAME_COLUMN, TOKENS_COLUMN]);\n  const menuItems = getMenuItems([VIEW_QUESTPAGE, VIEW_BADGES, LOGOUT]);\n  useEffect(() => {\n    if (!isAuthenticated) {\n      navigate(\"/login\");\n    }\n  }, [isAuthenticated]);\n  useEffect(() => {\n    getAllUsers();\n  }, []);\n\n  const getAllUsers = async () => {\n    const allUsers = await getByRequestUrl(LoginService.GET_RANKING);\n    setItems(getUserMain(allUsers));\n    setUserMain(allUsers);\n  };\n\n  const getSelectedItem = () => {\n    return selectedItems[0];\n  };\n\n  const getTitle = () => {\n    return \"Ranking page\";\n  };\n\n  const onQuestViewClicked = () => {\n    if (isAuthenticated) {\n      navigate(\"/quests\");\n    }\n  };\n\n  const onBadgeViewClicked = () => {\n    if (isAuthenticated) {\n      navigate(\"/badges\");\n    }\n  };\n\n  const onLogOutClicked = () => {\n    setLoggedUser(getDefaultUser());\n    navigate(\"/\");\n  };\n\n  const updateMenuItems = () => {\n    return menuItems.map(item => {\n      switch (item.key) {\n        case VIEW_QUESTPAGE:\n          item.onClick = () => onQuestViewClicked();\n\n          item.style = enabledMenuItemStyle;\n          break;\n\n        case VIEW_BADGES:\n          item.onClick = () => onBadgeViewClicked();\n\n          item.style = enabledMenuItemStyle;\n          break;\n\n        case LOGOUT:\n          item.onClick = () => onLogOutClicked();\n\n          item.style = enabledMenuItemStyle;\n          break;\n\n        default:\n          return item;\n      }\n\n      return item;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      className: \"hero is-fullheight has-background-dark\",\n      tokens: setGapBetweenHeadersAndDetailsList,\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        horizontal: true,\n        tokens: setGapBetweenHeadersAndUserInfo,\n        children: /*#__PURE__*/_jsxDEV(StackItem, {\n          tokens: setGapBetweenHeaders,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title has-text-white is-size-3 marginFH2\",\n            children: [\" \", getTitle(), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StackItem, {\n        children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n          theme: transparentTheme,\n          children: [/*#__PURE__*/_jsxDEV(CommandBar, {\n            id: \"view\",\n            items: updateMenuItems(),\n            styles: commandBarStyles\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DetailsList, {\n            className: \"hero is-fullheight has-background-dark\",\n            items: items,\n            setKey: \"set\",\n            columns: columns,\n            selectionMode: SelectionMode.single,\n            layoutMode: DetailsListLayoutMode.justified,\n            selection: selection,\n            selectionPreservedOnEmptyClick: true,\n            onRenderItemColumn: renderItemColumn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 7\n  }, this);\n};\n\n_s(RankingPage, \"Kd0i6Z/EQnkEcJBYryARluoG6Sk=\", false, function () {\n  return [useAuth, useNavigate];\n});\n\n_c = RankingPage;\nexport default RankingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RankingPage\");","map":{"version":3,"sources":["D:/InternshipAccesa/Questech/src/rankingpage/RankingPage.tsx"],"names":["CommandBar","DetailsList","Stack","StackItem","ThemeProvider","DetailsListLayoutMode","Selection","SelectionMode","React","useEffect","useState","useNavigate","useAuth","VIEW_QUESTPAGE","VIEW_BADGES","LOGOUT","LoginService","getViewportAsPixels","getByRequestUrl","setLoggedUser","getDefaultUser","setSelectedUser","commandBarStyles","detailsListColumnStyle","itemStyle","enabledMenuItemStyle","setGapBetweenHeaders","setGapBetweenHeadersAndDetailsList","transparentTheme","itemStyleForLastColumn","setGapBetweenHeadersAndUserInfo","FIRST_NAME_COLUMN","LAST_NAME_COLUMN","TOKENS_COLUMN","getColumnName","firstName","lastName","tokens","name","getFieldName","columnName","getColumn","pageWidth","key","fieldName","minWidth","maxWidth","isResizable","isMultiline","styles","getColumns","names","map","getListItemFromMainPage","user","id","renderItemColumn","item","index","column","fieldContent","getUserMain","allUsers","getMenuItem","text","iconProps","iconName","getMenuItems","RankingPage","props","isAuthenticated","navigate","items","setItems","setUserMain","selectedItems","setSelectedItems","undefined","selection","onSelectionChanged","getSelection","selected","columns","menuItems","getAllUsers","GET_RANKING","getSelectedItem","getTitle","onQuestViewClicked","onBadgeViewClicked","onLogOutClicked","updateMenuItems","onClick","style","single","justified"],"mappings":"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","sourcesContent":["import { CommandBar, DetailsList, IColumn, IContextualMenuItem, Stack, StackItem, ThemeProvider } from \"@fluentui/react\";\r\nimport { DetailsListLayoutMode, IObjectWithKey, Selection, SelectionMode } from \"@fluentui/react/lib/DetailsList\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../auth/AuthProvider\";\r\nimport { IMainPageProps } from \"../model/IMainPageProps\";\r\nimport { UserDetailsListItem } from \"../model/IUserDetailsListItem\";\r\nimport {VIEW_QUESTPAGE, VIEW_BADGES, LOGOUT} from \"../utils/generalConstants\";\r\nimport {LoginService} from \"../utils/service\";\r\nimport {\r\n  getViewportAsPixels,\r\n  getByRequestUrl,\r\n  loggedUser, setSelectedBadge, setLoggedUser, getDefaultUser, setSelectedUser\r\n} from \"../utils/utilsMethods\";\r\nimport {\r\n  commandBarStyles,\r\n  defaultMenuItemStyle,\r\n  detailsListColumnStyle,\r\n  itemStyle,\r\n  enabledMenuItemStyle,\r\n  setGapBetweenHeaders,\r\n  setGapBetweenHeadersAndDetailsList,\r\n  transparentTheme,\r\n  itemStyleForLastColumn,\r\n  setGapBetweenHeadersAndUserInfo, setStyleForUserName\r\n} from \"./RankingPage.styles\";\r\nimport {User} from \"../model/IUser\";\r\n\r\nconst FIRST_NAME_COLUMN: string = \"First Name\";\r\nconst LAST_NAME_COLUMN: string = \"Second Name\";\r\nconst TOKENS_COLUMN: string = \"Tokens\";\r\n\r\nconst getColumnName = (firstName: string, lastName: string, tokens: string, name: string): string => {\r\n  return name === firstName\r\n    ? firstName\r\n    : name === lastName\r\n    ? lastName\r\n    : name === tokens\r\n    ? tokens: name;\r\n};\r\n\r\nconst getFieldName = (columnName: string): string => {\r\n  return columnName === FIRST_NAME_COLUMN\r\n    ? \"firstName\"\r\n    : columnName === LAST_NAME_COLUMN\r\n    ? \"lastName\"\r\n    : columnName === TOKENS_COLUMN\r\n    ? \"tokens\"\r\n    : \"\";\r\n};\r\n\r\nconst getColumn = (pageWidth: number, name: string): IColumn => {\r\n  return {\r\n    key: name,\r\n    name: getColumnName(FIRST_NAME_COLUMN,LAST_NAME_COLUMN,TOKENS_COLUMN,name),\r\n    fieldName: getFieldName(name),\r\n    minWidth: getViewportAsPixels(pageWidth, 10),\r\n    maxWidth: getViewportAsPixels(pageWidth, 20),\r\n    isResizable: true,\r\n    isMultiline: true,\r\n    styles: detailsListColumnStyle,\r\n  };\r\n};\r\n\r\nconst getColumns = (pageWidth: number, names: string[]): IColumn[] => {\r\n  return names.map((name: string) => getColumn(pageWidth, name));\r\n};\r\n\r\nexport const getListItemFromMainPage = (user : User): UserDetailsListItem => {\r\n  return {\r\n    id: user.id,\r\n    firstName: user.firstName,\r\n    lastName: user.lastName,\r\n    tokens: user.tokens,\r\n  };\r\n};\r\n\r\nconst renderItemColumn = (item: any, index?: number, column?: IColumn): React.ReactFragment => {\r\n  const fieldContent = item[column!.fieldName as keyof UserDetailsListItem] as string;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {column!.fieldName !== \"created\"\r\n        ? <span className={itemStyle}>{fieldContent}</span>\r\n        : <span className={itemStyleForLastColumn}>{fieldContent}</span>\r\n      }\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst getUserMain = (allUsers: User[]): UserDetailsListItem[] => {\r\n  return allUsers.map((item) => getListItemFromMainPage(item));\r\n};\r\n\r\nconst getMenuItem = (name: string): IContextualMenuItem => {\r\n  return {\r\n    key: name,\r\n    text: name,\r\n    iconProps: { iconName: name },\r\n  };\r\n};\r\n\r\nconst getMenuItems = (names: string[]): IContextualMenuItem[] => {\r\n  return names.map((name: string) => getMenuItem(name));\r\n};\r\n\r\nconst RankingPage = (props: IMainPageProps): JSX.Element => {\r\n  const { isAuthenticated } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [items, setItems] = useState<UserDetailsListItem[]>([]);\r\n  const [user, setUserMain] = useState<User[]>([]);\r\n  const [selectedItems, setSelectedItems] = useState<IObjectWithKey[] | undefined>(undefined);\r\n  const [selection] = useState<Selection>(\r\n    () =>\r\n      new Selection({\r\n        onSelectionChanged: () => {\r\n          const selectedItems: IObjectWithKey[] = selection.getSelection();\r\n          const selected: UserDetailsListItem = selectedItems[0] as UserDetailsListItem;\r\n          setSelectedUser(selected);\r\n          setSelectedItems(selectedItems);\r\n        }\r\n      })\r\n  );\r\n\r\n  const columns: IColumn[] = getColumns(props.pageWidth, [FIRST_NAME_COLUMN, LAST_NAME_COLUMN, TOKENS_COLUMN]);\r\n  const menuItems: IContextualMenuItem[] = getMenuItems([VIEW_QUESTPAGE, VIEW_BADGES, LOGOUT]);\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      navigate(\"/login\");\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  useEffect(() => {\r\n    getAllUsers();\r\n  }, []);\r\n\r\n\r\n    const getAllUsers= async () => {\r\n      const allUsers: User[] = await getByRequestUrl(LoginService.GET_RANKING);\r\n      setItems(getUserMain(allUsers));\r\n      setUserMain(allUsers);\r\n    };\r\n\r\n  const getSelectedItem = (): IObjectWithKey => {\r\n    return selectedItems![0];\r\n  };\r\n\r\n  const getTitle = (): string => {\r\n    return \"Ranking page\";\r\n  };\r\n\r\n\r\n  const onQuestViewClicked = (): void => {\r\n    if (isAuthenticated) {\r\n      navigate(\"/quests\");\r\n    }\r\n  };\r\n\r\n  const onBadgeViewClicked = (): void => {\r\n    if (isAuthenticated) {\r\n      navigate(\"/badges\");\r\n    }\r\n  };\r\n\r\n  const onLogOutClicked = (): void => {\r\n      setLoggedUser(getDefaultUser());\r\n      navigate(\"/\");\r\n  };\r\n\r\n\r\n  const updateMenuItems = (): IContextualMenuItem[] => {\r\n    return menuItems.map((item: IContextualMenuItem) => {\r\n      switch (item.key) {\r\n        case VIEW_QUESTPAGE:\r\n          item.onClick = () => onQuestViewClicked();\r\n          item.style = enabledMenuItemStyle\r\n          break;\r\n        case VIEW_BADGES:\r\n          item.onClick = () => onBadgeViewClicked();\r\n          item.style = enabledMenuItemStyle\r\n          break;\r\n        case LOGOUT:\r\n          item.onClick = () => onLogOutClicked();\r\n          item.style = enabledMenuItemStyle\r\n          break;\r\n        default:\r\n          return item;\r\n      }\r\n      return item;\r\n    });\r\n  };\r\n\r\n  return (\r\n      <div>\r\n        <Stack className=\"hero is-fullheight has-background-dark\" tokens={setGapBetweenHeadersAndDetailsList}>\r\n          <Stack horizontal tokens={setGapBetweenHeadersAndUserInfo}>\r\n            <StackItem tokens={setGapBetweenHeaders}>\r\n              <p className=\"title has-text-white is-size-3 marginFH2\"> {getTitle()} </p>\r\n            </StackItem>\r\n          </Stack>\r\n          <StackItem>\r\n            <ThemeProvider theme={transparentTheme}>\r\n              <CommandBar id = \"view\" items={updateMenuItems()} styles={commandBarStyles} />\r\n              <DetailsList className=\"hero is-fullheight has-background-dark\"\r\n                           items={items}\r\n                           setKey=\"set\"\r\n                           columns={columns}\r\n                           selectionMode={SelectionMode.single}\r\n                           layoutMode={DetailsListLayoutMode.justified}\r\n                           selection={selection}\r\n                           selectionPreservedOnEmptyClick={true}\r\n                           onRenderItemColumn={renderItemColumn}>\r\n              </DetailsList>\r\n            </ThemeProvider>\r\n          </StackItem>\r\n        </Stack>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default RankingPage;\r\n"]},"metadata":{},"sourceType":"module"}