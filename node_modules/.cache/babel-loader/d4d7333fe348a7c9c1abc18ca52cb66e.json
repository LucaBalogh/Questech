{"ast":null,"code":"import axios from \"axios\";\nimport { config } from \"../../core\";\nimport { LocationService } from \"../../utils/service\";\nexport const createLocation = userStory => {\n  return axios.post(LocationService.CREATE, userStory).then(res => {\n    return Promise.resolve(res.data);\n  }).catch(err => {\n    return Promise.reject(err);\n  });\n};\nexport const updateLocation = location => {\n  return axios.put(`${LocationService.UPDATE}${location.id}`, location, config).then(res => {\n    return Promise.resolve(res.data);\n  }).catch(err => {\n    return Promise.reject(err);\n  });\n};","map":{"version":3,"sources":["D:/Faculta/Licenta/Traveltech/UI/src/locationpage/locationAll/locationApi.tsx"],"names":["axios","config","LocationService","createLocation","userStory","post","CREATE","then","res","Promise","resolve","data","catch","err","reject","updateLocation","location","put","UPDATE","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,YAAvB;AAEA,SAASC,eAAT,QAAgC,qBAAhC;AAEA,OAAO,MAAMC,cAAyD,GACpEC,SADuE,IAEpE;AACH,SAAOJ,KAAK,CACTK,IADI,CACCH,eAAe,CAACI,MADjB,EACyBF,SADzB,EAEJG,IAFI,CAEEC,GAAD,IAAS;AACb,WAAOC,OAAO,CAACC,OAAR,CAAgBF,GAAG,CAACG,IAApB,CAAP;AACD,GAJI,EAKJC,KALI,CAKGC,GAAD,IAAS;AACd,WAAOJ,OAAO,CAACK,MAAR,CAAeD,GAAf,CAAP;AACD,GAPI,CAAP;AAQD,CAXM;AAaP,OAAO,MAAME,cAAyD,GAClEC,QADqE,IAEpE;AACH,SAAOhB,KAAK,CACTiB,GADI,CACC,GAAEf,eAAe,CAACgB,MAAO,GAAEF,QAAQ,CAACG,EAAG,EADxC,EAC2CH,QAD3C,EACqDf,MADrD,EAEJM,IAFI,CAEEC,GAAD,IAAS;AACb,WAAOC,OAAO,CAACC,OAAR,CAAgBF,GAAG,CAACG,IAApB,CAAP;AACD,GAJI,EAKJC,KALI,CAKGC,GAAD,IAAS;AACd,WAAOJ,OAAO,CAACK,MAAR,CAAeD,GAAf,CAAP;AACD,GAPI,CAAP;AAQD,CAXM","sourcesContent":["import axios from \"axios\";\r\nimport { config } from \"../../core\";\r\nimport { Location } from \"../../model/ILocation\";\r\nimport { LocationService } from \"../../utils/service\";\r\n\r\nexport const createLocation: (location: Location) => Promise<Location> = (\r\n  userStory\r\n) => {\r\n  return axios\r\n    .post(LocationService.CREATE, userStory)\r\n    .then((res) => {\r\n      return Promise.resolve(res.data);\r\n    })\r\n    .catch((err) => {\r\n      return Promise.reject(err);\r\n    });\r\n};\r\n\r\nexport const updateLocation: (location: Location) => Promise<Location> = (\r\n    location\r\n) => {\r\n  return axios\r\n    .put(`${LocationService.UPDATE}${location.id}`, location, config)\r\n    .then((res) => {\r\n      return Promise.resolve(res.data);\r\n    })\r\n    .catch((err) => {\r\n      return Promise.reject(err);\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}