{"ast":null,"code":"import axios from \"axios\";\nimport { config } from \"../../core\";\nimport { QuestService } from \"../../utils/service\";\nexport const createQuest = quest => {\n  return axios.post(QuestService.CREATE, quest).then(res => {\n    return Promise.resolve(res.data);\n  }).catch(err => {\n    return Promise.reject(err);\n  });\n};\nexport const updateQuest = quest => {\n  return axios.put(`${QuestService.UPDATE}${quest.id}`, quest, config).then(res => {\n    return Promise.resolve(res.data);\n  }).catch(err => {\n    return Promise.reject(err);\n  });\n};","map":{"version":3,"sources":["D:/InternshipAccesa/Questech/src/questpage/questAll/questApi.tsx"],"names":["axios","config","QuestService","createQuest","quest","post","CREATE","then","res","Promise","resolve","data","catch","err","reject","updateQuest","put","UPDATE","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,YAAvB;AAEA,SAASC,YAAT,QAA6B,qBAA7B;AAEA,OAAO,MAAMC,WAA6C,GACtDC,KADyD,IAExD;AACH,SAAOJ,KAAK,CACTK,IADI,CACCH,YAAY,CAACI,MADd,EACsBF,KADtB,EAEJG,IAFI,CAEEC,GAAD,IAAS;AACb,WAAOC,OAAO,CAACC,OAAR,CAAgBF,GAAG,CAACG,IAApB,CAAP;AACD,GAJI,EAKJC,KALI,CAKGC,GAAD,IAAS;AACd,WAAOJ,OAAO,CAACK,MAAR,CAAeD,GAAf,CAAP;AACD,GAPI,CAAP;AAQD,CAXM;AAaP,OAAO,MAAME,WAA6C,GACtDX,KADyD,IAExD;AACH,SAAOJ,KAAK,CACTgB,GADI,CACC,GAAEd,YAAY,CAACe,MAAO,GAAEb,KAAK,CAACc,EAAG,EADlC,EACqCd,KADrC,EAC4CH,MAD5C,EAEJM,IAFI,CAEEC,GAAD,IAAS;AACb,WAAOC,OAAO,CAACC,OAAR,CAAgBF,GAAG,CAACG,IAApB,CAAP;AACD,GAJI,EAKJC,KALI,CAKGC,GAAD,IAAS;AACd,WAAOJ,OAAO,CAACK,MAAR,CAAeD,GAAf,CAAP;AACD,GAPI,CAAP;AAQD,CAXM","sourcesContent":["import axios from \"axios\";\r\nimport { config } from \"../../core\";\r\nimport { Quest } from \"../../model/IQuest\";\r\nimport { QuestService } from \"../../utils/service\";\r\n\r\nexport const createQuest: (quest: Quest) => Promise<Quest> = (\r\n    quest\r\n) => {\r\n  return axios\r\n    .post(QuestService.CREATE, quest)\r\n    .then((res) => {\r\n      return Promise.resolve(res.data);\r\n    })\r\n    .catch((err) => {\r\n      return Promise.reject(err);\r\n    });\r\n};\r\n\r\nexport const updateQuest: (quest: Quest) => Promise<Quest> = (\r\n    quest\r\n) => {\r\n  return axios\r\n    .put(`${QuestService.UPDATE}${quest.id}`, quest, config)\r\n    .then((res) => {\r\n      return Promise.resolve(res.data);\r\n    })\r\n    .catch((err) => {\r\n      return Promise.reject(err);\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}