{"ast":null,"code":"import axios from \"axios\";\nimport { config } from \"../core\";\nimport { projectBaseUrl } from \"../utils/generalConstants\";\nimport { setLoggedUser } from \"../utils/utilsMethods\";\nconst authUrl = `${projectBaseUrl}login`;\nexport const loginApi = (email, password) => {\n  return axios.post(authUrl, {\n    email,\n    password\n  }, config).then(res => {\n    setLoggedUser(res.data);\n    return Promise.resolve(res.data);\n  }).catch(err => {\n    return Promise.reject(err);\n  });\n};","map":{"version":3,"sources":["D:/InternshipAccesa/Questech/src/auth/authApi.tsx"],"names":["axios","config","projectBaseUrl","setLoggedUser","authUrl","loginApi","email","password","post","then","res","data","Promise","resolve","catch","err","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,SAAvB;AAEA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,MAAMC,OAAO,GAAI,GAAEF,cAAe,OAAlC;AAEA,OAAO,MAAMG,QAGK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxC,SAAOP,KAAK,CACTQ,IADI,CACCJ,OADD,EACU;AAAEE,IAAAA,KAAF;AAASC,IAAAA;AAAT,GADV,EAC+BN,MAD/B,EAEJQ,IAFI,CAEEC,GAAD,IAAS;AACbP,IAAAA,aAAa,CAACO,GAAG,CAACC,IAAL,CAAb;AACA,WAAOC,OAAO,CAACC,OAAR,CAAgBH,GAAG,CAACC,IAApB,CAAP;AACD,GALI,EAMJG,KANI,CAMGC,GAAD,IAAS;AACd,WAAOH,OAAO,CAACI,MAAR,CAAeD,GAAf,CAAP;AACD,GARI,CAAP;AASD,CAbM","sourcesContent":["import axios from \"axios\";\r\nimport { config } from \"../core\";\r\nimport { User } from \"../model/IUser\";\r\nimport { projectBaseUrl } from \"../utils/generalConstants\";\r\nimport { setLoggedUser } from \"../utils/utilsMethods\";\r\n\r\nconst authUrl = `${projectBaseUrl}login`;\r\n\r\nexport const loginApi: (\r\n  email?: string,\r\n  password?: string\r\n) => Promise<User> = (email, password) => {\r\n  return axios\r\n    .post(authUrl, { email, password }, config)\r\n    .then((res) => {\r\n      setLoggedUser(res.data);\r\n      return Promise.resolve(res.data);\r\n    })\r\n    .catch((err) => {\r\n      return Promise.reject(err);\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}