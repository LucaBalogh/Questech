{"ast":null,"code":"import axios from \"axios\";\nimport { LocationMainService, LocationService } from \"../../utils/service\";\nimport { config } from \"../../core\";\nexport const createMainLocation = location => {\n  return axios.post(LocationMainService.CREATE, location).then(res => {\n    return Promise.resolve(res.data);\n  }).catch(err => {\n    return Promise.reject(err);\n  });\n};\nexport const updateMainLocation = location => {\n  return axios.put(`${LocationService.UPDATE}${location.id}`, location, config).then(res => {\n    return Promise.resolve(res.data);\n  }).catch(err => {\n    return Promise.reject(err);\n  });\n};","map":{"version":3,"sources":["D:/Faculta/Licenta/Traveltech/UI/src/main/dashboard/locationMainApi.tsx"],"names":["axios","LocationMainService","LocationService","config","createMainLocation","location","post","CREATE","then","res","Promise","resolve","data","catch","err","reject","updateMainLocation","put","UPDATE","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,mBAAR,EAA6BC,eAA7B,QAAmD,qBAAnD;AACA,SAAQC,MAAR,QAAqB,YAArB;AAEA,OAAO,MAAMC,kBAA6D,GACtEC,QADyE,IAExE;AACH,SAAOL,KAAK,CACTM,IADI,CACCL,mBAAmB,CAACM,MADrB,EAC6BF,QAD7B,EAEJG,IAFI,CAEEC,GAAD,IAAS;AACb,WAAOC,OAAO,CAACC,OAAR,CAAgBF,GAAG,CAACG,IAApB,CAAP;AACD,GAJI,EAKJC,KALI,CAKGC,GAAD,IAAS;AACd,WAAOJ,OAAO,CAACK,MAAR,CAAeD,GAAf,CAAP;AACD,GAPI,CAAP;AAQD,CAXM;AAaP,OAAO,MAAME,kBAA6D,GACtEX,QADyE,IAExE;AACD,SAAOL,KAAK,CACPiB,GADE,CACG,GAAEf,eAAe,CAACgB,MAAO,GAAEb,QAAQ,CAACc,EAAG,EAD1C,EAC6Cd,QAD7C,EACuDF,MADvD,EAEFK,IAFE,CAEIC,GAAD,IAAS;AACX,WAAOC,OAAO,CAACC,OAAR,CAAgBF,GAAG,CAACG,IAApB,CAAP;AACH,GAJE,EAKFC,KALE,CAKKC,GAAD,IAAS;AACZ,WAAOJ,OAAO,CAACK,MAAR,CAAeD,GAAf,CAAP;AACH,GAPE,CAAP;AAQH,CAXM","sourcesContent":["import axios from \"axios\";\r\nimport { Location } from \"../../model/ILocation\";\r\nimport {LocationMainService, LocationService} from \"../../utils/service\";\r\nimport {config} from \"../../core\";\r\n\r\nexport const createMainLocation: (location: Location) => Promise<Location> = (\r\n    location\r\n) => {\r\n  return axios\r\n    .post(LocationMainService.CREATE, location)\r\n    .then((res) => {\r\n      return Promise.resolve(res.data);\r\n    })\r\n    .catch((err) => {\r\n      return Promise.reject(err);\r\n    });\r\n};\r\n\r\nexport const updateMainLocation: (location: Location) => Promise<Location> = (\r\n    location\r\n) => {\r\n    return axios\r\n        .put(`${LocationService.UPDATE}${location.id}`, location, config)\r\n        .then((res) => {\r\n            return Promise.resolve(res.data);\r\n        })\r\n        .catch((err) => {\r\n            return Promise.reject(err);\r\n        });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}