{"ast":null,"code":"var _jsxFileName = \"D:\\\\Faculta\\\\Licenta\\\\Traveltech\\\\UI\\\\src\\\\main\\\\MainPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { CommandBar, DetailsList, Stack, StackItem, ThemeProvider } from \"@fluentui/react\";\nimport { DetailsListLayoutMode, Selection, SelectionMode } from \"@fluentui/react/lib/DetailsList\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../auth/AuthProvider\";\nimport { VIEW_LOCATIONS, ADD } from \"../utils/generalConstants\";\nimport SaveLocationMainModal from \"./dashboard/SaveLocationMainModal\";\nimport { LocationMainService } from \"../utils/service\";\nimport { getViewportAsPixels, getByRequestUrl, loggedUser, setSelectedLocation, selectedLocation } from \"../utils/utilsMethods\";\nimport { commandBarStyles, detailsListColumnStyle, itemStyle, enabledMenuItemStyle, setGapBetweenHeaders, setGapBetweenHeadersAndDetailsList, transparentTheme, itemStyleForLastColumn, setGapBetweenHeadersAndUserInfo } from \"./MainPage.styles\";\nimport LoginFoot from \"../images/foot.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CITY_COLUMN = \"City\";\nconst COUNTRY_COLUMN = \"Country\";\nconst TIP_COLUMN = \"Tip\";\nconst RATING_COLUMN = \"Rating\";\nconst CREATED_BY_COLUMN = \"User\";\nconst BACKLOG_TITLE = \"Top 10 Locations\";\n\nconst getColumnName = (city, country, tip, rating, user, name) => {\n  return name === city ? city : name === country ? country : name === tip ? tip : name === rating ? rating : name === user ? user : name;\n};\n\nconst getFieldName = columnName => {\n  return columnName === CITY_COLUMN ? \"city\" : columnName === COUNTRY_COLUMN ? \"country\" : columnName === TIP_COLUMN ? \"tip\" : columnName === RATING_COLUMN ? \"rating\" : columnName === CREATED_BY_COLUMN ? \"user\" : \"\";\n};\n\nconst getColumn = (pageWidth, name) => {\n  return {\n    key: name,\n    name: getColumnName(CITY_COLUMN, COUNTRY_COLUMN, TIP_COLUMN, RATING_COLUMN, CREATED_BY_COLUMN, name),\n    fieldName: getFieldName(name),\n    minWidth: getViewportAsPixels(pageWidth, 10),\n    maxWidth: getViewportAsPixels(pageWidth, 20),\n    isResizable: true,\n    isMultiline: true,\n    styles: detailsListColumnStyle\n  };\n};\n\nconst getColumns = (pageWidth, names) => {\n  return names.map(name => getColumn(pageWidth, name));\n};\n\nexport const getListItemFromMainPage = locationMain => {\n  return {\n    id: locationMain.id,\n    city: locationMain.city,\n    country: locationMain.country,\n    tip: locationMain.tip,\n    rating: locationMain.rating,\n    user: `${locationMain.user.firstName}${\" \"}${locationMain.user.lastName}`\n  };\n};\n\nconst renderItemColumn = (item, index, column) => {\n  const fieldContent = item[column.fieldName];\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: column.fieldName !== \"created\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: itemStyle,\n      children: fieldContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      className: itemStyleForLastColumn,\n      children: fieldContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\nconst getMenuItem = name => {\n  return {\n    key: name,\n    text: name,\n    iconProps: {\n      iconName: name\n    }\n  };\n};\n\nconst getMenuItems = names => {\n  return names.map(name => getMenuItem(name));\n};\n\nconst MainPage = props => {\n  _s();\n\n  const {\n    isAuthenticated\n  } = useAuth();\n  const navigate = useNavigate();\n  const [items, setItems] = useState([]);\n  const [locationMain, setlocationMain] = useState([]);\n  const [selectedItems, setSelectedItems] = useState(undefined);\n  const [selection] = useState(() => new Selection({\n    onSelectionChanged: () => {\n      const selectedItems = selection.getSelection();\n      const selected = selectedItems[0];\n      setSelectedLocation(selected);\n      setSelectedItems(selectedItems);\n    }\n  }));\n  const [isSaving, setIsSaving] = useState(false);\n  const switchSavingMode = useCallback(() => setIsSaving(isSaving => !isSaving), []);\n  const columns = getColumns(props.pageWidth, [CITY_COLUMN, COUNTRY_COLUMN, TIP_COLUMN, RATING_COLUMN, CREATED_BY_COLUMN]);\n  const menuItems = getMenuItems([ADD, VIEW_LOCATIONS]);\n  useEffect(() => {\n    if (!isAuthenticated) {\n      navigate(\"/login\");\n    }\n  }, [isAuthenticated]);\n  useEffect(() => {\n    getLocationsMain();\n  }, []);\n\n  const getLocationsMain = async () => {\n    const allLocations = await getByRequestUrl(`${LocationMainService.GET_TOP}`);\n    console.log(allLocations);\n    setItems(getAllLocationsMain(allLocations));\n    setlocationMain(allLocations);\n  };\n\n  const getAllLocationsMain = allLocations => {\n    return allLocations.map(item => getListItemFromMainPage(item));\n  };\n\n  const getTitle = () => {\n    return `${\"Welcome back, \"}${loggedUser.firstName}${\" \"}${loggedUser.lastName}${\"!\"}`;\n  };\n\n  const getSelectedLocation = () => {\n    const index = locationMain.findIndex(it => it.id === selectedLocation.id);\n\n    if (loggedUser.id != null) {\n      locationMain[index].user.id = loggedUser.id;\n    }\n\n    return locationMain[index];\n  };\n\n  const isSaveOrDeleteDisabled = checkEdit => {\n    if (!selectedItems) return true;\n\n    if (checkEdit) {\n      if (selectedItems.length !== 1) return true;\n    } else if (selectedItems.length < 1) return true;\n\n    return false;\n  };\n\n  const onViewClicked = () => {\n    if (isAuthenticated) {\n      navigate(\"/locations\");\n    }\n  };\n\n  const onAddClicked = () => {\n    // if (locationMain.find((us) => us.id === selectedLocation.id) !== undefined) {\n    //   switchSavingMode();\n    // }\n    switchSavingMode();\n  };\n\n  const updateMenuItems = () => {\n    return menuItems.map(item => {\n      switch (item.key) {\n        case ADD:\n          // item.disabled = isSaveOrDeleteDisabled(true);\n          // item.onClick = () => onAddClicked();\n          // item.style =\n          //     selectedItems?.length === 1\n          //         ? enabledMenuItemStyle\n          //         : defaultMenuItemStyle;\n          item.onClick = () => onAddClicked();\n\n          item.style = enabledMenuItemStyle;\n          break;\n\n        case VIEW_LOCATIONS:\n          item.onClick = () => onViewClicked();\n\n          item.style = enabledMenuItemStyle;\n          break;\n\n        default:\n          return item;\n      }\n\n      return item;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isSaving && /*#__PURE__*/_jsxDEV(SaveLocationMainModal, {\n      switchMode: switchSavingMode // location={getSelectedLocation()}\n      ,\n      items: items,\n      setItems: setItems,\n      locations: locationMain,\n      setLocations: setlocationMain\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      className: \"hero is-fullheight has-background-dark\",\n      tokens: setGapBetweenHeadersAndDetailsList,\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        horizontal: true,\n        tokens: setGapBetweenHeadersAndUserInfo,\n        children: /*#__PURE__*/_jsxDEV(StackItem, {\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            tokens: setGapBetweenHeaders,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"title has-text-white is-size-5 has-text-left marginFH1\",\n              children: [\" \", getTitle(), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"subtitle has-text-white is-size-3 marginFH2\",\n              children: [\" \", BACKLOG_TITLE, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StackItem, {\n        children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n          theme: transparentTheme,\n          children: [/*#__PURE__*/_jsxDEV(CommandBar, {\n            items: updateMenuItems(),\n            styles: commandBarStyles\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DetailsList, {\n            className: \"hero is-fullheight has-background-dark\",\n            items: items,\n            setKey: \"set\",\n            columns: columns,\n            selectionMode: SelectionMode.single,\n            layoutMode: DetailsListLayoutMode.justified,\n            selection: selection,\n            selectionPreservedOnEmptyClick: true,\n            onRenderItemColumn: renderItemColumn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hero-foot\",\n        children: /*#__PURE__*/_jsxDEV(\"figure\", {\n          className: \"image is-fullwidth\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: LoginFoot,\n            alt: \"LoginFoot\",\n            className: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 7\n  }, this);\n};\n\n_s(MainPage, \"o6PtAS4TU0wtqO5/dsLrKef/FZI=\", false, function () {\n  return [useAuth, useNavigate];\n});\n\n_c = MainPage;\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["D:/Faculta/Licenta/Traveltech/UI/src/main/MainPage.tsx"],"names":["CommandBar","DetailsList","Stack","StackItem","ThemeProvider","DetailsListLayoutMode","Selection","SelectionMode","React","useCallback","useEffect","useState","useNavigate","useAuth","VIEW_LOCATIONS","ADD","SaveLocationMainModal","LocationMainService","getViewportAsPixels","getByRequestUrl","loggedUser","setSelectedLocation","selectedLocation","commandBarStyles","detailsListColumnStyle","itemStyle","enabledMenuItemStyle","setGapBetweenHeaders","setGapBetweenHeadersAndDetailsList","transparentTheme","itemStyleForLastColumn","setGapBetweenHeadersAndUserInfo","CITY_COLUMN","COUNTRY_COLUMN","TIP_COLUMN","RATING_COLUMN","CREATED_BY_COLUMN","BACKLOG_TITLE","getColumnName","city","country","tip","rating","user","name","getFieldName","columnName","getColumn","pageWidth","key","fieldName","minWidth","maxWidth","isResizable","isMultiline","styles","getColumns","names","map","getListItemFromMainPage","locationMain","id","firstName","lastName","renderItemColumn","item","index","column","fieldContent","getMenuItem","text","iconProps","iconName","getMenuItems","MainPage","props","isAuthenticated","navigate","items","setItems","setlocationMain","selectedItems","setSelectedItems","undefined","selection","onSelectionChanged","getSelection","selected","isSaving","setIsSaving","switchSavingMode","columns","menuItems","getLocationsMain","allLocations","GET_TOP","console","log","getAllLocationsMain","getTitle","getSelectedLocation","findIndex","it","isSaveOrDeleteDisabled","checkEdit","length","onViewClicked","onAddClicked","updateMenuItems","onClick","style","single","justified","LoginFoot"],"mappings":"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","sourcesContent":["import { CommandBar, DetailsList, IColumn, IContextualMenuItem, Stack, StackItem, ThemeProvider } from \"@fluentui/react\";\r\nimport { DetailsListLayoutMode, IObjectWithKey, Selection, SelectionMode } from \"@fluentui/react/lib/DetailsList\";\r\nimport React, {useCallback, useEffect, useState} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../auth/AuthProvider\";\r\nimport { IMainPageProps } from \"../model/IMainPageProps\";\r\nimport { LocationDetailsListItem } from \"../model/ILocationDetailsListItem\";\r\nimport {VIEW_LOCATIONS, ADD} from \"../utils/generalConstants\";\r\nimport SaveLocationMainModal from \"./dashboard/SaveLocationMainModal\";\r\nimport { LocationMainService } from \"../utils/service\";\r\nimport {\r\n  getDefaultUser,\r\n  getDefaultLocation,\r\n  getViewportAsPixels,\r\n  getByRequestUrl,\r\n  loggedUser, setSelectedLocation, selectedLocation\r\n} from \"../utils/utilsMethods\";\r\nimport {\r\n  commandBarStyles,\r\n  defaultMenuItemStyle,\r\n  detailsListColumnStyle,\r\n  itemStyle,\r\n  enabledMenuItemStyle,\r\n  setGapBetweenHeaders,\r\n  setGapBetweenHeadersAndDetailsList,\r\n  transparentTheme,\r\n  itemStyleForLastColumn,\r\n  setGapBetweenHeadersAndUserInfo, setStyleForUserName\r\n} from \"./MainPage.styles\";\r\nimport LoginFoot from \"../images/foot.svg\";\r\nimport {Location} from \"../model/ILocation\";\r\n\r\nconst CITY_COLUMN: string = \"City\";\r\nconst COUNTRY_COLUMN: string = \"Country\";\r\nconst TIP_COLUMN: string = \"Tip\";\r\nconst RATING_COLUMN: string = \"Rating\";\r\nconst CREATED_BY_COLUMN: string = \"User\";\r\nconst BACKLOG_TITLE: string = \"Top 10 Locations\";\r\n\r\nconst getColumnName = (city: string, country: string, tip: string, rating: string, user: string, name: string): string => {\r\n  return name === city\r\n    ? city\r\n    : name === country\r\n    ? country\r\n    : name === tip\r\n    ? tip\r\n    : name === rating\r\n    ? rating\r\n    : name === user\r\n    ? user: name;\r\n};\r\n\r\nconst getFieldName = (columnName: string): string => {\r\n  return columnName === CITY_COLUMN\r\n    ? \"city\"\r\n    : columnName === COUNTRY_COLUMN\r\n    ? \"country\"\r\n    : columnName === TIP_COLUMN\r\n    ? \"tip\"\r\n    : columnName === RATING_COLUMN\r\n    ? \"rating\"\r\n    : columnName === CREATED_BY_COLUMN\r\n    ? \"user\"\r\n    : \"\";\r\n};\r\n\r\nconst getColumn = (pageWidth: number, name: string): IColumn => {\r\n  return {\r\n    key: name,\r\n    name: getColumnName(CITY_COLUMN,COUNTRY_COLUMN,TIP_COLUMN,RATING_COLUMN,CREATED_BY_COLUMN,name),\r\n    fieldName: getFieldName(name),\r\n    minWidth: getViewportAsPixels(pageWidth, 10),\r\n    maxWidth: getViewportAsPixels(pageWidth, 20),\r\n    isResizable: true,\r\n    isMultiline: true,\r\n    styles: detailsListColumnStyle,\r\n  };\r\n};\r\n\r\nconst getColumns = (pageWidth: number, names: string[]): IColumn[] => {\r\n  return names.map((name: string) => getColumn(pageWidth, name));\r\n};\r\n\r\nexport const getListItemFromMainPage = (locationMain: Location): LocationDetailsListItem => {\r\n  return {\r\n    id: locationMain.id,\r\n    city: locationMain.city,\r\n    country: locationMain.country,\r\n    tip: locationMain.tip,\r\n    rating: locationMain.rating,\r\n    user: `${locationMain.user.firstName}${\" \"}${locationMain.user.lastName}`,\r\n  };\r\n};\r\n\r\nconst renderItemColumn = (item: any, index?: number, column?: IColumn): React.ReactFragment => {\r\n  const fieldContent = item[column!.fieldName as keyof LocationDetailsListItem] as string;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {column!.fieldName !== \"created\"\r\n        ? <span className={itemStyle}>{fieldContent}</span>\r\n        : <span className={itemStyleForLastColumn}>{fieldContent}</span>\r\n      }\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst getMenuItem = (name: string): IContextualMenuItem => {\r\n  return {\r\n    key: name,\r\n    text: name,\r\n    iconProps: { iconName: name },\r\n  };\r\n};\r\n\r\nconst getMenuItems = (names: string[]): IContextualMenuItem[] => {\r\n  return names.map((name: string) => getMenuItem(name));\r\n};\r\n\r\nconst MainPage = (props: IMainPageProps): JSX.Element => {\r\n  const { isAuthenticated } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [items, setItems] = useState<LocationDetailsListItem[]>([]);\r\n  const [locationMain, setlocationMain] = useState<Location[]>([]);\r\n  const [selectedItems, setSelectedItems] = useState<IObjectWithKey[] | undefined>(undefined);\r\n  const [selection] = useState<Selection>(\r\n    () =>\r\n      new Selection({\r\n        onSelectionChanged: () => {\r\n          const selectedItems: IObjectWithKey[] = selection.getSelection();\r\n          const selected: LocationDetailsListItem = selectedItems[0] as LocationDetailsListItem;\r\n          setSelectedLocation(selected);\r\n          setSelectedItems(selectedItems);\r\n        },\r\n      })\r\n  );\r\n\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const switchSavingMode = useCallback(\r\n      () => setIsSaving((isSaving) => !isSaving),\r\n      []\r\n  );\r\n\r\n  const columns: IColumn[] = getColumns(props.pageWidth, [CITY_COLUMN, COUNTRY_COLUMN, TIP_COLUMN, RATING_COLUMN, CREATED_BY_COLUMN]);\r\n  const menuItems: IContextualMenuItem[] = getMenuItems([ADD, VIEW_LOCATIONS]);\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      navigate(\"/login\");\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  useEffect(() => {\r\n    getLocationsMain();\r\n  }, []);\r\n\r\n\r\n  const getLocationsMain = async () => {\r\n    const allLocations = await getByRequestUrl(`${LocationMainService.GET_TOP}`);\r\n    console.log(allLocations)\r\n    setItems(getAllLocationsMain(allLocations));\r\n    setlocationMain(allLocations);\r\n  };\r\n\r\n  const getAllLocationsMain = (allLocations: Location[]): LocationDetailsListItem[] => {\r\n    return allLocations.map((item) => getListItemFromMainPage(item));\r\n  };\r\n\r\n  const getTitle = (): string => {\r\n    return `${\"Welcome back, \"}${loggedUser.firstName}${ \" \"}${loggedUser.lastName}${\"!\"}`;\r\n  };\r\n\r\n  const getSelectedLocation = (): Location => {\r\n    const index = locationMain.findIndex((it) => it.id === selectedLocation.id);\r\n    if (loggedUser.id != null) {\r\n      locationMain[index].user.id = loggedUser.id;\r\n    }\r\n    return locationMain[index];\r\n  };\r\n\r\n  const isSaveOrDeleteDisabled = (checkEdit: boolean): boolean => {\r\n    if (!selectedItems)\r\n      return true;\r\n\r\n    if (checkEdit) {\r\n      if (selectedItems.length !== 1)\r\n        return true;\r\n    }\r\n    else\r\n    if (selectedItems.length < 1)\r\n      return true;\r\n    return false;\r\n  };\r\n\r\n  const onViewClicked = (): void => {\r\n    if (isAuthenticated) {\r\n      navigate(\"/locations\");\r\n    }\r\n  };\r\n\r\n  const onAddClicked = (): void => {\r\n    // if (locationMain.find((us) => us.id === selectedLocation.id) !== undefined) {\r\n    //   switchSavingMode();\r\n    // }\r\n    switchSavingMode();\r\n  };\r\n\r\n  const updateMenuItems = (): IContextualMenuItem[] => {\r\n    return menuItems.map((item: IContextualMenuItem) => {\r\n      switch (item.key) {\r\n        case ADD:\r\n          // item.disabled = isSaveOrDeleteDisabled(true);\r\n          // item.onClick = () => onAddClicked();\r\n          // item.style =\r\n          //     selectedItems?.length === 1\r\n          //         ? enabledMenuItemStyle\r\n          //         : defaultMenuItemStyle;\r\n          item.onClick = () => onAddClicked();\r\n          item.style = enabledMenuItemStyle;\r\n          break;\r\n        case VIEW_LOCATIONS:\r\n          item.onClick = () => onViewClicked();\r\n          item.style = enabledMenuItemStyle\r\n          break;\r\n        default:\r\n          return item;\r\n      }\r\n      return item;\r\n    });\r\n  };\r\n\r\n  return (\r\n      <div>\r\n      {isSaving && (\r\n          <SaveLocationMainModal\r\n              switchMode={switchSavingMode}\r\n              // location={getSelectedLocation()}\r\n              items={items}\r\n              setItems={setItems}\r\n              locations={locationMain}\r\n              setLocations={setlocationMain}\r\n          />\r\n      )}\r\n        <Stack\r\n            className=\"hero is-fullheight has-background-dark\"\r\n            tokens={setGapBetweenHeadersAndDetailsList}\r\n        >\r\n          <Stack horizontal tokens={setGapBetweenHeadersAndUserInfo}>\r\n            <StackItem>\r\n              <Stack tokens={setGapBetweenHeaders}>\r\n                <p className=\"title has-text-white is-size-5 has-text-left marginFH1\">\r\n                  {\" \"}\r\n                  {getTitle()}{\" \"}\r\n                </p>\r\n                <p className=\"subtitle has-text-white is-size-3 marginFH2\">\r\n                  {\" \"}\r\n                  {BACKLOG_TITLE}{\" \"}\r\n                </p>\r\n              </Stack>\r\n            </StackItem>\r\n          </Stack>\r\n        <StackItem>\r\n          <ThemeProvider theme={transparentTheme}>\r\n            <CommandBar items={updateMenuItems()} styles={commandBarStyles} />\r\n            <DetailsList\r\n              className=\"hero is-fullheight has-background-dark\"\r\n              items={items}\r\n              setKey=\"set\"\r\n              columns={columns}\r\n              selectionMode={SelectionMode.single}\r\n              layoutMode={DetailsListLayoutMode.justified}\r\n              selection={selection}\r\n              selectionPreservedOnEmptyClick={true}\r\n              onRenderItemColumn={renderItemColumn}\r\n            ></DetailsList>\r\n          </ThemeProvider>\r\n        </StackItem>\r\n        <div className=\"hero-foot\">\r\n          <figure className=\"image is-fullwidth\">\r\n            <img src={LoginFoot} alt=\"LoginFoot\" className=\"\" />\r\n          </figure>\r\n        </div>\r\n      </Stack>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"]},"metadata":{},"sourceType":"module"}