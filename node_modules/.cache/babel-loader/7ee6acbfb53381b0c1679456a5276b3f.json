{"ast":null,"code":"var _jsxFileName = \"D:\\\\Faculta\\\\Licenta\\\\Traveltech\\\\UI\\\\src\\\\main\\\\MainPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { CommandBar, DetailsList, Stack, StackItem, ThemeProvider } from \"@fluentui/react\";\nimport { DetailsListLayoutMode, Selection, SelectionMode } from \"@fluentui/react/lib/DetailsList\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../auth/AuthProvider\";\nimport { VIEW_LOCATIONS } from \"../utils/generalConstants\";\nimport { LocationMainService } from \"../utils/service\";\nimport { getViewportAsPixels, getByRequestUrl, loggedUser, setSelectedLocation } from \"../utils/utilsMethods\";\nimport { commandBarStyles, detailsListColumnStyle, itemStyle, enabledMenuItemStyle, setGapBetweenHeaders, setGapBetweenHeadersAndDetailsList, transparentTheme, itemStyleForLastColumn, setGapBetweenHeadersAndUserInfo } from \"./MainPage.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CITY_COLUMN = \"City\";\nconst COUNTRY_COLUMN = \"Country\";\nconst TIP_COLUMN = \"Tip\";\nconst RATING_COLUMN = \"Rating\";\nconst CREATED_BY_COLUMN = \"User\";\nconst BACKLOG_TITLE = \"Top 10 Locations\";\n\nconst getColumnName = (city, country, tip, rating, user, name) => {\n  return name === city ? city : name === country ? country : name === tip ? tip : name === rating ? rating : name === user ? user : name;\n};\n\nconst getFieldName = columnName => {\n  return columnName === CITY_COLUMN ? \"city\" : columnName === COUNTRY_COLUMN ? \"country\" : columnName === TIP_COLUMN ? \"tip\" : columnName === RATING_COLUMN ? \"rating\" : columnName === CREATED_BY_COLUMN ? \"user\" : \"\";\n};\n\nconst getColumn = (pageWidth, name) => {\n  return {\n    key: name,\n    name: getColumnName(CITY_COLUMN, COUNTRY_COLUMN, TIP_COLUMN, RATING_COLUMN, CREATED_BY_COLUMN, name),\n    fieldName: getFieldName(name),\n    minWidth: getViewportAsPixels(pageWidth, 10),\n    maxWidth: getViewportAsPixels(pageWidth, 20),\n    isResizable: true,\n    isMultiline: true,\n    styles: detailsListColumnStyle\n  };\n};\n\nconst getColumns = (pageWidth, names) => {\n  return names.map(name => getColumn(pageWidth, name));\n};\n\nexport const getListItemFromMainPage = locationMain => {\n  return {\n    id: locationMain.id,\n    city: locationMain.city,\n    country: locationMain.country,\n    tip: locationMain.tip,\n    rating: locationMain.rating,\n    user: `${locationMain.user.firstName}${\" \"}${locationMain.user.lastName}`\n  };\n};\n\nconst renderItemColumn = (item, index, column) => {\n  const fieldContent = item[column.fieldName];\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: column.fieldName !== \"created\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: itemStyle,\n      children: fieldContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      className: itemStyleForLastColumn,\n      children: fieldContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\nconst getLocationMain = allLocations => {\n  return allLocations.map(item => getListItemFromMainPage(item));\n};\n\nconst getMenuItem = name => {\n  return {\n    key: name,\n    text: name,\n    iconProps: {\n      iconName: name\n    }\n  };\n};\n\nconst getMenuItems = names => {\n  return names.map(name => getMenuItem(name));\n};\n\nconst MainPage = props => {\n  _s();\n\n  const {\n    isAuthenticated\n  } = useAuth();\n  const navigate = useNavigate();\n  const [items, setItems] = useState([]);\n  const [locationMain, setLocationMain] = useState([]);\n  const [selectedItems, setSelectedItems] = useState(undefined);\n  const [selection] = useState(() => new Selection({\n    onSelectionChanged: () => {\n      const selectedItems = selection.getSelection();\n      const selected = selectedItems[0];\n      setSelectedLocation(selected);\n      setSelectedItems(selectedItems);\n    }\n  }));\n  const columns = getColumns(props.pageWidth, [CITY_COLUMN, COUNTRY_COLUMN, TIP_COLUMN, RATING_COLUMN, CREATED_BY_COLUMN]);\n  const menuItems = getMenuItems([VIEW_LOCATIONS]);\n  useEffect(() => {\n    if (!isAuthenticated) {\n      navigate(\"/login\");\n    }\n  }, [isAuthenticated]);\n  useEffect(() => {\n    getAllLocationsMain();\n  }, []);\n\n  const getAllLocationsMain = async () => {\n    const allLocations = await getByRequestUrl(`${LocationMainService.GET_TOP}${loggedUser.id}`);\n    setItems(getLocationMain(allLocations));\n    setLocationMain(allLocations);\n  };\n\n  const getSelectedItem = () => {\n    return selectedItems[0];\n  };\n\n  const getTitle = () => {\n    return `${\"Welcome back, \"}${loggedUser.firstName}${\" \"}${loggedUser.lastName}${\"!\"}`;\n  };\n\n  const onViewClicked = () => {\n    if (isAuthenticated) {\n      navigate(\"/locations\");\n    }\n  };\n\n  const updateMenuItems = () => {\n    return menuItems.map(item => {\n      switch (item.key) {\n        case VIEW_LOCATIONS:\n          item.onClick = () => onViewClicked();\n\n          item.style = enabledMenuItemStyle;\n          break;\n\n        default:\n          return item;\n      }\n\n      return item;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      className: \"hero is-fullheight has-background-dark\",\n      tokens: setGapBetweenHeadersAndDetailsList,\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        horizontal: true,\n        tokens: setGapBetweenHeadersAndUserInfo,\n        children: /*#__PURE__*/_jsxDEV(StackItem, {\n          tokens: setGapBetweenHeaders,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title has-text-white is-size-3 marginFH2\",\n            children: [\" \", getTitle(), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StackItem, {\n        children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n          theme: transparentTheme,\n          children: [/*#__PURE__*/_jsxDEV(CommandBar, {\n            items: updateMenuItems(),\n            styles: commandBarStyles\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DetailsList, {\n            className: \"hero is-fullheight has-background-dark\",\n            items: items,\n            setKey: \"set\",\n            columns: columns,\n            selectionMode: SelectionMode.single,\n            layoutMode: DetailsListLayoutMode.justified,\n            selection: selection,\n            selectionPreservedOnEmptyClick: true,\n            onRenderItemColumn: renderItemColumn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 7\n  }, this);\n};\n\n_s(MainPage, \"DOj/W7DOQZeMgfoK0VaRX6pN0pE=\", false, function () {\n  return [useAuth, useNavigate];\n});\n\n_c = MainPage;\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["D:/Faculta/Licenta/Traveltech/UI/src/main/MainPage.tsx"],"names":["CommandBar","DetailsList","Stack","StackItem","ThemeProvider","DetailsListLayoutMode","Selection","SelectionMode","React","useEffect","useState","useNavigate","useAuth","VIEW_LOCATIONS","LocationMainService","getViewportAsPixels","getByRequestUrl","loggedUser","setSelectedLocation","commandBarStyles","detailsListColumnStyle","itemStyle","enabledMenuItemStyle","setGapBetweenHeaders","setGapBetweenHeadersAndDetailsList","transparentTheme","itemStyleForLastColumn","setGapBetweenHeadersAndUserInfo","CITY_COLUMN","COUNTRY_COLUMN","TIP_COLUMN","RATING_COLUMN","CREATED_BY_COLUMN","BACKLOG_TITLE","getColumnName","city","country","tip","rating","user","name","getFieldName","columnName","getColumn","pageWidth","key","fieldName","minWidth","maxWidth","isResizable","isMultiline","styles","getColumns","names","map","getListItemFromMainPage","locationMain","id","firstName","lastName","renderItemColumn","item","index","column","fieldContent","getLocationMain","allLocations","getMenuItem","text","iconProps","iconName","getMenuItems","MainPage","props","isAuthenticated","navigate","items","setItems","setLocationMain","selectedItems","setSelectedItems","undefined","selection","onSelectionChanged","getSelection","selected","columns","menuItems","getAllLocationsMain","GET_TOP","getSelectedItem","getTitle","onViewClicked","updateMenuItems","onClick","style","single","justified"],"mappings":"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","sourcesContent":["import { CommandBar, DetailsList, IColumn, IContextualMenuItem, Stack, StackItem, ThemeProvider } from \"@fluentui/react\";\r\nimport { DetailsListLayoutMode, IObjectWithKey, Selection, SelectionMode } from \"@fluentui/react/lib/DetailsList\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../auth/AuthProvider\";\r\nimport { IMainPageProps } from \"../model/IMainPageProps\";\r\nimport { LocationDetailsListItem } from \"../model/ILocationDetailsListItem\";\r\nimport {VIEW_LOCATIONS} from \"../utils/generalConstants\";\r\nimport { LocationMainService } from \"../utils/service\";\r\nimport {\r\n  getViewportAsPixels,\r\n  getByRequestUrl,\r\n  loggedUser, setSelectedLocation, selectedLocation\r\n} from \"../utils/utilsMethods\";\r\nimport {\r\n  commandBarStyles,\r\n  defaultMenuItemStyle,\r\n  detailsListColumnStyle,\r\n  itemStyle,\r\n  enabledMenuItemStyle,\r\n  setGapBetweenHeaders,\r\n  setGapBetweenHeadersAndDetailsList,\r\n  transparentTheme,\r\n  itemStyleForLastColumn,\r\n  setGapBetweenHeadersAndUserInfo, setStyleForUserName\r\n} from \"./MainPage.styles\";\r\nimport LoginFoot from \"../images/foot.svg\";\r\nimport {Location} from \"../model/ILocation\";\r\n\r\nconst CITY_COLUMN: string = \"City\";\r\nconst COUNTRY_COLUMN: string = \"Country\";\r\nconst TIP_COLUMN: string = \"Tip\";\r\nconst RATING_COLUMN: string = \"Rating\";\r\nconst CREATED_BY_COLUMN: string = \"User\";\r\nconst BACKLOG_TITLE: string = \"Top 10 Locations\";\r\n\r\nconst getColumnName = (city: string, country: string, tip: string, rating: string, user: string, name: string): string => {\r\n  return name === city\r\n    ? city\r\n    : name === country\r\n    ? country\r\n    : name === tip\r\n    ? tip\r\n    : name === rating\r\n    ? rating\r\n    : name === user\r\n    ? user: name;\r\n};\r\n\r\nconst getFieldName = (columnName: string): string => {\r\n  return columnName === CITY_COLUMN\r\n    ? \"city\"\r\n    : columnName === COUNTRY_COLUMN\r\n    ? \"country\"\r\n    : columnName === TIP_COLUMN\r\n    ? \"tip\"\r\n    : columnName === RATING_COLUMN\r\n    ? \"rating\"\r\n    : columnName === CREATED_BY_COLUMN\r\n    ? \"user\"\r\n    : \"\";\r\n};\r\n\r\nconst getColumn = (pageWidth: number, name: string): IColumn => {\r\n  return {\r\n    key: name,\r\n    name: getColumnName(CITY_COLUMN,COUNTRY_COLUMN,TIP_COLUMN,RATING_COLUMN,CREATED_BY_COLUMN,name),\r\n    fieldName: getFieldName(name),\r\n    minWidth: getViewportAsPixels(pageWidth, 10),\r\n    maxWidth: getViewportAsPixels(pageWidth, 20),\r\n    isResizable: true,\r\n    isMultiline: true,\r\n    styles: detailsListColumnStyle,\r\n  };\r\n};\r\n\r\nconst getColumns = (pageWidth: number, names: string[]): IColumn[] => {\r\n  return names.map((name: string) => getColumn(pageWidth, name));\r\n};\r\n\r\nexport const getListItemFromMainPage = (locationMain: Location): LocationDetailsListItem => {\r\n  return {\r\n    id: locationMain.id,\r\n    city: locationMain.city,\r\n    country: locationMain.country,\r\n    tip: locationMain.tip,\r\n    rating: locationMain.rating,\r\n    user: `${locationMain.user.firstName}${\" \"}${locationMain.user.lastName}`,\r\n  };\r\n};\r\n\r\nconst renderItemColumn = (item: any, index?: number, column?: IColumn): React.ReactFragment => {\r\n  const fieldContent = item[column!.fieldName as keyof LocationDetailsListItem] as string;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {column!.fieldName !== \"created\"\r\n        ? <span className={itemStyle}>{fieldContent}</span>\r\n        : <span className={itemStyleForLastColumn}>{fieldContent}</span>\r\n      }\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst getLocationMain = (allLocations: Location[]): LocationDetailsListItem[] => {\r\n  return allLocations.map((item) => getListItemFromMainPage(item));\r\n};\r\n\r\nconst getMenuItem = (name: string): IContextualMenuItem => {\r\n  return {\r\n    key: name,\r\n    text: name,\r\n    iconProps: { iconName: name },\r\n  };\r\n};\r\n\r\nconst getMenuItems = (names: string[]): IContextualMenuItem[] => {\r\n  return names.map((name: string) => getMenuItem(name));\r\n};\r\n\r\nconst MainPage = (props: IMainPageProps): JSX.Element => {\r\n  const { isAuthenticated } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [items, setItems] = useState<LocationDetailsListItem[]>([]);\r\n  const [locationMain, setLocationMain] = useState<Location[]>([]);\r\n  const [selectedItems, setSelectedItems] = useState<IObjectWithKey[] | undefined>(undefined);\r\n  const [selection] = useState<Selection>(\r\n    () =>\r\n      new Selection({\r\n        onSelectionChanged: () => {\r\n          const selectedItems: IObjectWithKey[] = selection.getSelection();\r\n          const selected: LocationDetailsListItem = selectedItems[0] as LocationDetailsListItem;\r\n          setSelectedLocation(selected);\r\n          setSelectedItems(selectedItems);\r\n        }\r\n      })\r\n  );\r\n\r\n  const columns: IColumn[] = getColumns(props.pageWidth, [CITY_COLUMN, COUNTRY_COLUMN, TIP_COLUMN, RATING_COLUMN, CREATED_BY_COLUMN]);\r\n  const menuItems: IContextualMenuItem[] = getMenuItems([VIEW_LOCATIONS]);\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      navigate(\"/login\");\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  useEffect(() => {\r\n    getAllLocationsMain();\r\n  }, []);\r\n\r\n\r\n    const getAllLocationsMain = async () => {\r\n      const allLocations: Location[] = await getByRequestUrl(`${LocationMainService.GET_TOP}${loggedUser.id}`);\r\n      setItems(getLocationMain(allLocations));\r\n      setLocationMain(allLocations);\r\n    };\r\n\r\n  const getSelectedItem = (): IObjectWithKey => {\r\n    return selectedItems![0];\r\n  };\r\n\r\n  const getTitle = (): string => {\r\n    return `${\"Welcome back, \"}${loggedUser.firstName}${ \" \"}${loggedUser.lastName}${\"!\"}`;\r\n  };\r\n\r\n\r\n  const onViewClicked = (): void => {\r\n    if (isAuthenticated) {\r\n      navigate(\"/locations\");\r\n    }\r\n  };\r\n\r\n\r\n  const updateMenuItems = (): IContextualMenuItem[] => {\r\n    return menuItems.map((item: IContextualMenuItem) => {\r\n      switch (item.key) {\r\n        case VIEW_LOCATIONS:\r\n          item.onClick = () => onViewClicked();\r\n          item.style = enabledMenuItemStyle\r\n          break;\r\n        default:\r\n          return item;\r\n      }\r\n      return item;\r\n    });\r\n  };\r\n\r\n  return (\r\n      <div>\r\n        <Stack className=\"hero is-fullheight has-background-dark\" tokens={setGapBetweenHeadersAndDetailsList}>\r\n          <Stack horizontal tokens={setGapBetweenHeadersAndUserInfo}>\r\n            <StackItem tokens={setGapBetweenHeaders}>\r\n              <p className=\"title has-text-white is-size-3 marginFH2\"> {getTitle()} </p>\r\n            </StackItem>\r\n          </Stack>\r\n          <StackItem>\r\n            <ThemeProvider theme={transparentTheme}>\r\n              <CommandBar items={updateMenuItems()} styles={commandBarStyles} />\r\n              <DetailsList className=\"hero is-fullheight has-background-dark\"\r\n                           items={items}\r\n                           setKey=\"set\"\r\n                           columns={columns}\r\n                           selectionMode={SelectionMode.single}\r\n                           layoutMode={DetailsListLayoutMode.justified}\r\n                           selection={selection}\r\n                           selectionPreservedOnEmptyClick={true}\r\n                           onRenderItemColumn={renderItemColumn}>\r\n              </DetailsList>\r\n            </ThemeProvider>\r\n          </StackItem>\r\n        </Stack>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"]},"metadata":{},"sourceType":"module"}