{"ast":null,"code":"var _jsxFileName = \"D:\\\\Faculta\\\\Licenta\\\\Traveltech\\\\UI\\\\src\\\\locationpage\\\\locationAll\\\\EditLocationModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { Tip } from \"../../model/Tip\";\nimport { LocationContext } from \"./LocationProvider\";\nimport { getListItemFromLocation } from \"../Locations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateLocationModal = _ref => {\n  _s();\n\n  let {\n    switchMode,\n    location,\n    items,\n    setItems,\n    locations,\n    setLocations\n  } = _ref;\n  const {\n    saving,\n    savingError,\n    saveLocation\n  } = useContext(LocationContext);\n  const initialState = { ...location\n  };\n  const [state, setState] = useState(initialState);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    saveLocation === null || saveLocation === void 0 ? void 0 : saveLocation(state).then(loc => {\n      console.log(loc);\n\n      if (loc) {\n        const index = items.findIndex(it => it.id === location.id);\n\n        if (index !== -1) {\n          items[index] = getListItemFromLocation(loc);\n          locations[index] = loc;\n        }\n\n        setItems(items);\n        setLocations(locations);\n        switchMode();\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal is-active\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-background\",\n      onClick: () => {\n        switchMode();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-card\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"modal-card-body has-background-light p-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"modal-card-title\",\n            children: \"Edit Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            className: \"form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"label has-text-weight-light\",\n                children: \"City\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                value: state.city,\n                type: \"text\",\n                className: \"input\",\n                onChange: e => setState({ ...state,\n                  city: e.currentTarget.value || \"\"\n                }),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"label has-text-weight-light\",\n                children: \"Country\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                value: state.country,\n                type: \"text\",\n                className: \"input\",\n                onChange: e => setState({ ...state,\n                  country: e.currentTarget.value || \"\"\n                }),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field is-expanded is-fullwidth mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"label has-text-weight-light\",\n                children: \"Tip\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"control is-expanded is-fullwidth\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"select is-fullwidth\",\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    id: \"selectTip\",\n                    className: \"has-text-weight-normal\",\n                    onChange: e => {\n                      setState({ ...state,\n                        tip: e.currentTarget.value\n                      });\n                    },\n                    children: Object.values(Tip).filter(item => {\n                      return isNaN(Number(item));\n                    }).map(item => item === state.tip ? /*#__PURE__*/_jsxDEV(\"option\", {\n                      selected: true,\n                      children: item\n                    }, item, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 35\n                    }, this) : /*#__PURE__*/_jsxDEV(\"option\", {\n                      id: \"`${item}`\",\n                      children: item\n                    }, item, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 35\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"label has-text-weight-light\",\n                children: \"Rating\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                value: state.rating,\n                type: \"text\",\n                className: \"input\",\n                onChange: e => setState({ ...state,\n                  rating: parseFloat(e.currentTarget.value) || 0\n                }),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"label has-text-weight-light\",\n                children: \"User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                value: `${state.user.firstName} ${state.user.lastName}`,\n                type: \"text\",\n                className: \"input\",\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"py-2\",\n              children: savingError && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info has-text-error is-size-7 mt-2\",\n                children: [savingError.message, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 43\n                }, this), \"Please retry\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), !saving && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button is-dark is-fullwidth\",\n              id: \"update\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), saving && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"is-dark is-fullwidth mt-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"columns is-fullwidth is-centered\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"column is-one-third\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"column is-one-fifth mt-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"control is-loading\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"column is-one-third\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button is-fullwidth mt-5\",\n              onClick: () => {\n                switchMode();\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateLocationModal, \"63XcsVaAe9V9UVAd2qICQ481u0M=\");\n\n_c = CreateLocationModal;\nexport default CreateLocationModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateLocationModal\");","map":{"version":3,"sources":["D:/Faculta/Licenta/Traveltech/UI/src/locationpage/locationAll/EditLocationModal.tsx"],"names":["React","useContext","useState","Tip","LocationContext","getListItemFromLocation","CreateLocationModal","switchMode","location","items","setItems","locations","setLocations","saving","savingError","saveLocation","initialState","state","setState","handleSubmit","e","preventDefault","then","loc","console","log","index","findIndex","it","id","city","currentTarget","value","country","tip","Object","values","filter","item","isNaN","Number","map","rating","parseFloat","user","firstName","lastName","message"],"mappings":"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","sourcesContent":["import React, { FormEvent, useContext, useState } from \"react\";\r\nimport { User } from \"../../model/IUser\";\r\nimport { Location } from \"../../model/ILocation\";\r\nimport { LocationDetailsListItem } from \"../../model/ILocationDetailsListItem\";\r\nimport { Tip } from \"../../model/Tip\";\r\nimport { LocationContext } from \"./LocationProvider\";\r\nimport {getListItemFromLocation} from \"../Locations\";\r\n\r\nexport interface EditLocationModalProps {\r\n  switchMode: () => void;\r\n  location: Location;\r\n  items: LocationDetailsListItem[];\r\n  setItems: (items: LocationDetailsListItem[]) => void;\r\n  locations: Location[];\r\n  setLocations: (items: Location[]) => void;\r\n}\r\n\r\ninterface EditLocationModalState {\r\n  id: number;\r\n  city: string;\r\n  country: string;\r\n  tip: string;\r\n  rating: number;\r\n  user: User;\r\n}\r\n\r\nconst CreateLocationModal: React.FC<EditLocationModalProps> = ({\r\n  switchMode,\r\n  location,\r\n  items,\r\n  setItems,\r\n  locations,\r\n  setLocations,\r\n}) => {\r\n  const { saving, savingError, saveLocation } = useContext(LocationContext);\r\n  const initialState = {...location};\r\n  const [state, setState] = useState<EditLocationModalState>(initialState);\r\n\r\n\r\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    saveLocation?.(state).then((loc: Location) => {\r\n      console.log(loc);\r\n      if (loc) {\r\n        const index = items.findIndex((it) => it.id === location.id);\r\n        if (index !== -1) {\r\n          items[index] = getListItemFromLocation(loc);\r\n          locations[index] = loc;\r\n        }\r\n        setItems(items);\r\n        setLocations(locations);\r\n        switchMode();\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal is-active\">\r\n      <div\r\n        className=\"modal-background\"\r\n        onClick={() => {\r\n          switchMode();\r\n        }}\r\n      />\r\n      <div className=\"modal-card\">\r\n        <section className=\"modal-card-body has-background-light p-6\">\r\n          <div className=\"content\">\r\n            <p className=\"modal-card-title\">Edit Location</p>\r\n            <form onSubmit={handleSubmit} className=\"form\">\r\n              <div className=\"field mt-4\">\r\n                <div className=\"label has-text-weight-light\">City</div>\r\n                <input\r\n                  value={state.city}\r\n                  type=\"text\"\r\n                  className=\"input\"\r\n                  onChange={(e) =>\r\n                    setState({ ...state, city: e.currentTarget.value || \"\" })\r\n                  }\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"field mt-4\">\r\n                <div className=\"label has-text-weight-light\">Country</div>\r\n                <input\r\n                    value={state.country}\r\n                    type=\"text\"\r\n                    className=\"input\"\r\n                    onChange={(e) =>\r\n                        setState({ ...state, country: e.currentTarget.value || \"\" })\r\n                    }\r\n                    required\r\n                />\r\n              </div>\r\n              <div className=\"field is-expanded is-fullwidth mt-4\">\r\n                <label className=\"label has-text-weight-light\">Tip</label>\r\n                <div className=\"control is-expanded is-fullwidth\">\r\n                  <span className=\"select is-fullwidth\">\r\n                    <select\r\n                        id = \"selectTip\"\r\n                        className=\"has-text-weight-normal\"\r\n                        onChange={(e) => {\r\n                          setState({\r\n                            ...state,\r\n                            tip: e.currentTarget.value,\r\n                          });\r\n                        }}\r\n                    >\r\n                      {Object.values(Tip)\r\n                          .filter((item) => {\r\n                            return isNaN(Number(item));\r\n                          })\r\n                          .map((item) =>\r\n                              item === state.tip ? (\r\n                                  <option key={item} selected>\r\n                                    {item}\r\n                                  </option>\r\n                              ) : (\r\n                                  <option key={item} id = \"`${item}`\">{item}</option>\r\n                              )\r\n                          )}\r\n                    </select>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div className=\"field mt-4\">\r\n                <div className=\"label has-text-weight-light\">Rating</div>\r\n                <input\r\n                    value={state.rating}\r\n                    type=\"text\"\r\n                    className=\"input\"\r\n                    onChange={(e) =>\r\n                        setState({ ...state, rating: parseFloat(e.currentTarget.value) || 0 })\r\n                    }\r\n                    required\r\n                />\r\n              </div>\r\n              <div className=\"field mt-4\">\r\n                <div className=\"label has-text-weight-light\">User</div>\r\n                <input\r\n                    value={`${state.user.firstName} ${state.user.lastName}`}\r\n                    type=\"text\"\r\n                    className=\"input\"\r\n                    readOnly\r\n                />\r\n              </div>\r\n              <div className=\"py-2\">\r\n                {savingError && (\r\n                  <div className=\"info has-text-error is-size-7 mt-2\">\r\n                    {savingError.message} <br />\r\n                    Please retry\r\n                  </div>\r\n                )}\r\n              </div>\r\n              {!saving && (\r\n                <button className=\"button is-dark is-fullwidth\" id = \"update\">Edit</button>\r\n              )}\r\n              {saving && (\r\n                <div className=\"is-dark is-fullwidth mt-6\">\r\n                  <div className=\"columns is-fullwidth is-centered\">\r\n                    <div className=\"column is-one-third\" />\r\n                    <div className=\"column is-one-fifth mt-2\">\r\n                      <div className=\"control is-loading\"></div>\r\n                    </div>\r\n                    <div className=\"column is-one-third\" />\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <button\r\n                className=\"button is-fullwidth mt-5\"\r\n                onClick={() => {\r\n                  switchMode();\r\n                }}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateLocationModal;\r\n"]},"metadata":{},"sourceType":"module"}