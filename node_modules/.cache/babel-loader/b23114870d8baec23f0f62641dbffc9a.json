{"ast":null,"code":"var _jsxFileName = \"D:\\\\Faculta\\\\Licenta\\\\Traveltech\\\\UI\\\\src\\\\locationpage\\\\Locations.tsx\",\n    _s = $RefreshSig$();\n\nimport { CommandBar, DetailsList, Stack, StackItem, ThemeProvider } from \"@fluentui/react\";\nimport { DetailsListLayoutMode, Selection, SelectionMode } from '@fluentui/react/lib/DetailsList';\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../auth/AuthProvider\";\nimport { LocationService } from \"../utils/service\";\nimport { getByRequestUrl, getViewportAsPixels, loggedUser, setSelectedLocation, selectedLocation } from \"../utils/utilsMethods\";\nimport { commandBarStyles, defaultMenuItemStyle, detailsListColumnStyle, enabledMenuItemStyle, itemStyle, itemStyleForLastColumn, setGapBetweenHeaders, setGapBetweenHeadersAndDetailsList, setGapBetweenHeadersAndUserInfo, transparentTheme } from \"./Locations.styles\";\nimport { ADD, DELETE, EDIT } from \"../utils/generalConstants\";\nimport SaveLocationModal from \"./locationAll/SaveLocationModal\";\nimport EditUserStoryModal from \"./locationAll/EditLocationModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CITY_COLUMN = \"City\";\nconst COUNTRY_COLUMN = \"Country\";\nconst TIP_COLUMN = \"Tip\";\nconst RATING_COLUMN = \"Rating\";\nconst BACKLOG_TITLE = \"User locations\";\n\nconst getColumnName = (city, country, tip, rating, name) => {\n  return name === city ? city : name === country ? country : name === tip ? tip : name === rating ? rating : name;\n};\n\nconst getFieldName = columnName => {\n  return columnName === CITY_COLUMN ? \"city\" : columnName === COUNTRY_COLUMN ? \"country\" : columnName === TIP_COLUMN ? \"tip\" : columnName === RATING_COLUMN ? \"rating\" : \"\";\n};\n\nconst getColumn = (pageWidth, name) => {\n  return {\n    key: name,\n    name: getColumnName(CITY_COLUMN, COUNTRY_COLUMN, TIP_COLUMN, RATING_COLUMN, name),\n    fieldName: getFieldName(name),\n    minWidth: getViewportAsPixels(pageWidth, 10),\n    maxWidth: getViewportAsPixels(pageWidth, 20),\n    isResizable: true,\n    isMultiline: true,\n    styles: detailsListColumnStyle\n  };\n};\n\nconst getColumns = (pageWidth, names) => {\n  return names.map(name => getColumn(pageWidth, name));\n};\n\nexport const getListItemFromLocation = location => {\n  return {\n    id: location.id,\n    city: location.city,\n    country: location.country,\n    tip: location.tip,\n    rating: location.rating,\n    user: `${location.user.firstName}${\" \"}${location.user.lastName}`\n  };\n};\n\nconst renderItemColumn = (item, index, column) => {\n  const fieldContent = item[column.fieldName];\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: column.fieldName !== \"created\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: itemStyle,\n      children: fieldContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      className: itemStyleForLastColumn,\n      children: fieldContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\nconst getLocationForCurrentUser = allTasks => {\n  return allTasks.map(item => getListItemFromLocation(item));\n};\n\nconst getMenuItem = name => {\n  return {\n    key: name,\n    text: name,\n    iconProps: {\n      iconName: name\n    }\n  };\n};\n\nconst getMenuItems = names => {\n  return names.map(name => getMenuItem(name));\n};\n\nconst Locations = props => {\n  _s();\n\n  const {\n    isAuthenticated\n  } = useAuth();\n  const navigate = useNavigate();\n  const [deleteItemId, setDeleteItemId] = useState(0);\n  const [items, setItems] = useState([]);\n  const [selectedItems, setSelectedItems] = useState(undefined);\n  const [locations, setLocations] = useState([]);\n  const [selection] = useState(() => new Selection({\n    onSelectionChanged: () => {\n      const selectedItems = selection.getSelection();\n      const selected = selectedItems[0];\n      setSelectedLocation(selected);\n      setSelectedItems(selectedItems);\n    }\n  }));\n  const columns = getColumns(props.pageWidth, [CITY_COLUMN, COUNTRY_COLUMN, TIP_COLUMN, RATING_COLUMN]);\n  const menuItems = getMenuItems([ADD, EDIT, DELETE]);\n  useEffect(() => {\n    if (!isAuthenticated) {\n      navigate(\"/login\");\n    }\n  }, [isAuthenticated]);\n  useEffect(() => {\n    getAllLocationsForCurrentUser();\n  }, []);\n  const [isSaving, setIsSaving] = useState(false);\n  const switchSavingMode = useCallback(() => setIsSaving(isSaving => !isSaving), []);\n  const [isEditing, setIsEditing] = useState(false);\n  const switchEditingMode = useCallback(() => setIsEditing(isEditing => !isEditing), []);\n  useEffect(() => {\n    if (deleteItemId === 0) {\n      return;\n    }\n\n    deleteLocation();\n  }, [deleteItemId]);\n\n  const getAllLocationsForCurrentUser = async () => {\n    const allTasks = await getByRequestUrl(`${LocationService.GET_ALL_BY_USER_ID}${loggedUser.id}`);\n    setItems(getLocationForCurrentUser(allTasks));\n  };\n\n  const deleteLocation = async () => {\n    const location = getSelectedItem();\n    const requestUrl = `${LocationService.DELETE_BY_ID}${location.id}`;\n    const message = await getByRequestUrl(requestUrl);\n\n    if (message === \"Success\") {\n      getAllLocationsForCurrentUser();\n    } else {\n      alert(\"An error has occurred on delete operation\");\n    }\n  };\n\n  const getSelectedItem = () => {\n    return selectedItems[0];\n  };\n\n  const getTitle = () => {\n    return `${loggedUser.firstName}${\" \"}${loggedUser.lastName}${\"'s locations\"}`;\n  };\n\n  const getSelectedLocation = () => {\n    const index = locations.findIndex(it => it.id === selectedLocation.id);\n    return locations[index];\n  };\n\n  const isEditOrDeleteDisabled = checkEdit => {\n    if (!selectedItems) return true;\n\n    if (checkEdit) {\n      if (selectedItems.length !== 1) return true;\n    } else if (selectedItems.length < 1) return true;\n\n    return false;\n  };\n\n  const onAddClicked = () => {\n    switchSavingMode();\n  };\n\n  const onEditClicked = () => {\n    if (locations.find(us => us.id === selectedLocation.id) !== undefined) {\n      switchEditingMode();\n    }\n  };\n\n  const onDeleteClicked = () => {\n    const deleteLoc = getSelectedItem();\n    setDeleteItemId(deleteLoc.id);\n  };\n\n  const updateMenuItems = () => {\n    return menuItems.map(item => {\n      switch (item.key) {\n        case ADD:\n          item.onClick = () => onAddClicked();\n\n          item.style = enabledMenuItemStyle;\n          break;\n\n        case EDIT:\n          item.disabled = isEditOrDeleteDisabled(true);\n\n          item.onClick = () => onEditClicked();\n\n          item.style = (selectedItems === null || selectedItems === void 0 ? void 0 : selectedItems.length) === 1 ? enabledMenuItemStyle : defaultMenuItemStyle;\n          break;\n\n        case DELETE:\n          item.disabled = isEditOrDeleteDisabled(false);\n\n          item.onClick = () => onDeleteClicked();\n\n          item.style = (selectedItems === null || selectedItems === void 0 ? void 0 : selectedItems.length) === 1 ? enabledMenuItemStyle : defaultMenuItemStyle;\n          break;\n\n        default:\n          return item;\n      }\n\n      return item;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isSaving && /*#__PURE__*/_jsxDEV(SaveLocationModal, {\n      switchMode: switchSavingMode,\n      items: items,\n      setItems: setItems,\n      locations: locations,\n      setLocations: setLocations\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(EditUserStoryModal, {\n      switchMode: switchEditingMode,\n      location: getSelectedLocation(),\n      items: items,\n      setItems: setItems,\n      locations: locations,\n      setLocations: setLocations\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      className: \"hero is-fullheight has-background-dark\",\n      tokens: setGapBetweenHeadersAndDetailsList,\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        horizontal: true,\n        tokens: setGapBetweenHeadersAndUserInfo,\n        children: /*#__PURE__*/_jsxDEV(StackItem, {\n          tokens: setGapBetweenHeaders,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title has-text-white is-size-5 has-text-left marginFH1\",\n            children: [\" \", getTitle(), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"subtitle has-text-white is-size-3 marginFH2\",\n            children: [\" \", BACKLOG_TITLE, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(StackItem, {\n        children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n          theme: transparentTheme,\n          children: [/*#__PURE__*/_jsxDEV(CommandBar, {\n            items: updateMenuItems(),\n            styles: commandBarStyles\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(DetailsList, {\n            className: \"hero is-fullheight has-background-dark\",\n            items: items,\n            setKey: \"set\",\n            columns: columns,\n            selectionMode: SelectionMode.single,\n            layoutMode: DetailsListLayoutMode.justified,\n            selection: selection,\n            selectionPreservedOnEmptyClick: true,\n            onRenderItemColumn: renderItemColumn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Locations, \"F1RarQH6cveLEN5txxSX1qbgYw4=\", false, function () {\n  return [useAuth, useNavigate];\n});\n\n_c = Locations;\nexport default Locations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Locations\");","map":{"version":3,"sources":["D:/Faculta/Licenta/Traveltech/UI/src/locationpage/Locations.tsx"],"names":["CommandBar","DetailsList","Stack","StackItem","ThemeProvider","DetailsListLayoutMode","Selection","SelectionMode","React","useCallback","useEffect","useState","useNavigate","useAuth","LocationService","getByRequestUrl","getViewportAsPixels","loggedUser","setSelectedLocation","selectedLocation","commandBarStyles","defaultMenuItemStyle","detailsListColumnStyle","enabledMenuItemStyle","itemStyle","itemStyleForLastColumn","setGapBetweenHeaders","setGapBetweenHeadersAndDetailsList","setGapBetweenHeadersAndUserInfo","transparentTheme","ADD","DELETE","EDIT","SaveLocationModal","EditUserStoryModal","CITY_COLUMN","COUNTRY_COLUMN","TIP_COLUMN","RATING_COLUMN","BACKLOG_TITLE","getColumnName","city","country","tip","rating","name","getFieldName","columnName","getColumn","pageWidth","key","fieldName","minWidth","maxWidth","isResizable","isMultiline","styles","getColumns","names","map","getListItemFromLocation","location","id","user","firstName","lastName","renderItemColumn","item","index","column","fieldContent","getLocationForCurrentUser","allTasks","getMenuItem","text","iconProps","iconName","getMenuItems","Locations","props","isAuthenticated","navigate","deleteItemId","setDeleteItemId","items","setItems","selectedItems","setSelectedItems","undefined","locations","setLocations","selection","onSelectionChanged","getSelection","selected","columns","menuItems","getAllLocationsForCurrentUser","isSaving","setIsSaving","switchSavingMode","isEditing","setIsEditing","switchEditingMode","deleteLocation","GET_ALL_BY_USER_ID","getSelectedItem","requestUrl","DELETE_BY_ID","message","alert","getTitle","getSelectedLocation","findIndex","it","isEditOrDeleteDisabled","checkEdit","length","onAddClicked","onEditClicked","find","us","onDeleteClicked","deleteLoc","updateMenuItems","onClick","style","disabled","single","justified"],"mappings":"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","sourcesContent":["import { CommandBar, DetailsList, IColumn, IContextualMenuItem, Stack, StackItem, ThemeProvider } from \"@fluentui/react\";\r\nimport { DetailsListLayoutMode, IObjectWithKey, Selection, SelectionMode } from '@fluentui/react/lib/DetailsList';\r\nimport React, {useCallback, useEffect, useState} from \"react\";\r\nimport { useNavigate} from \"react-router-dom\";\r\nimport { useAuth } from \"../auth/AuthProvider\";\r\nimport { LocationDetailsListItem } from \"../model/ILocationDetailsListItem\";\r\nimport { LocationService } from \"../utils/service\";\r\nimport {getByRequestUrl, getViewportAsPixels, loggedUser, setSelectedLocation, selectedLocation} from \"../utils/utilsMethods\";\r\nimport {commandBarStyles, defaultMenuItemStyle, detailsListColumnStyle, enabledMenuItemStyle, itemStyle, itemStyleForLastColumn, setGapBetweenHeaders, setGapBetweenHeadersAndDetailsList, setGapBetweenHeadersAndUserInfo, setStyleForUserName, transparentTheme} from \"./Locations.styles\";\r\nimport {ILocationProps} from \"../model/ILocationProps\";\r\nimport {Location} from \"../model/ILocation\";\r\nimport {ADD, DELETE, EDIT} from \"../utils/generalConstants\";\r\nimport SaveLocationModal from \"./locationAll/SaveLocationModal\";\r\nimport EditUserStoryModal from \"./locationAll/EditLocationModal\";\r\n\r\nconst CITY_COLUMN: string = \"City\";\r\nconst COUNTRY_COLUMN: string = \"Country\";\r\nconst TIP_COLUMN: string = \"Tip\";\r\nconst RATING_COLUMN: string = \"Rating\";\r\nconst BACKLOG_TITLE: string = \"User locations\";\r\n\r\nconst getColumnName = (city: string, country: string, tip: string, rating: string, name: string): string => {\r\n    return name === city\r\n        ? city\r\n        : name === country\r\n            ? country\r\n            : name === tip\r\n                ? tip\r\n                : name === rating\r\n                    ? rating\r\n                    : name;\r\n};\r\n\r\nconst getFieldName = (columnName: string): string => {\r\n    return columnName === CITY_COLUMN\r\n        ? \"city\"\r\n        : columnName === COUNTRY_COLUMN\r\n            ? \"country\"\r\n            : columnName === TIP_COLUMN\r\n                ? \"tip\"\r\n                : columnName === RATING_COLUMN\r\n                    ? \"rating\"\r\n                        : \"\";\r\n};\r\n\r\nconst getColumn = (pageWidth: number, name: string): IColumn => {\r\n    return {\r\n        key: name,\r\n        name: getColumnName(CITY_COLUMN,COUNTRY_COLUMN,TIP_COLUMN,RATING_COLUMN,name),\r\n        fieldName: getFieldName(name),\r\n        minWidth: getViewportAsPixels(pageWidth, 10),\r\n        maxWidth: getViewportAsPixels(pageWidth, 20),\r\n        isResizable: true,\r\n        isMultiline: true,\r\n        styles: detailsListColumnStyle,\r\n    };\r\n};\r\n\r\nconst getColumns = (pageWidth: number, names: string[]): IColumn[] => {\r\n    return names.map((name: string) => getColumn(pageWidth, name));\r\n};\r\n\r\nexport const getListItemFromLocation = (location : Location): LocationDetailsListItem => {\r\n    return {\r\n        id: location.id,\r\n        city: location.city,\r\n        country: location.country,\r\n        tip: location.tip,\r\n        rating: location.rating,\r\n        user: `${location.user.firstName}${\" \"}${location.user.lastName}`,\r\n    };\r\n};\r\n\r\nconst renderItemColumn = (item: any, index?: number, column?: IColumn): React.ReactFragment => {\r\n    const fieldContent = item[column!.fieldName as keyof LocationDetailsListItem] as string;\r\n    \r\n    return (\r\n        <React.Fragment>\r\n      {column!.fieldName !== \"created\"\r\n        ? <span className={itemStyle}>{fieldContent}</span>\r\n        : <span className={itemStyleForLastColumn}>{fieldContent}</span>\r\n      }\r\n    </React.Fragment>\r\n    );\r\n};\r\n\r\nconst getLocationForCurrentUser = (allTasks: Location[]): LocationDetailsListItem[] => {\r\n    return allTasks.map((item) => getListItemFromLocation(item) );\r\n};\r\n\r\nconst getMenuItem = (name: string): IContextualMenuItem => {\r\n    return {\r\n        key: name,\r\n        text: name,\r\n        iconProps: { iconName: name }\r\n    }\r\n  };\r\n  \r\n  const getMenuItems = (names: string[]): IContextualMenuItem[] => {\r\n    return names.map((name: string) => getMenuItem(name));\r\n  };\r\n\r\nconst Locations = (props: ILocationProps): JSX.Element => {\r\n    const { isAuthenticated } = useAuth();\r\n    const navigate = useNavigate();\r\n    const [deleteItemId, setDeleteItemId] = useState<number>(0);\r\n    const [items, setItems] = useState<LocationDetailsListItem[]>([]);\r\n    const [selectedItems, setSelectedItems] = useState<IObjectWithKey[] | undefined>(undefined);\r\n    const [locations, setLocations] = useState<Location[]>([]);\r\n    const [selection] = useState<Selection>(() => new Selection({\r\n        onSelectionChanged: () => {\r\n            const selectedItems: IObjectWithKey[] = selection.getSelection();\r\n            const selected: LocationDetailsListItem = selectedItems[0] as LocationDetailsListItem;\r\n            setSelectedLocation(selected);\r\n            setSelectedItems(selectedItems);\r\n        }\r\n    }));\r\n    const columns: IColumn[] = getColumns(props.pageWidth, [CITY_COLUMN, COUNTRY_COLUMN, TIP_COLUMN, RATING_COLUMN]);\r\n    const menuItems: IContextualMenuItem[] = getMenuItems([ADD, EDIT, DELETE]);\r\n\r\n    useEffect(() => {\r\n        if (!isAuthenticated) {\r\n            navigate(\"/login\");\r\n        }\r\n    }, [isAuthenticated]);\r\n\r\n    useEffect(() => {\r\n        getAllLocationsForCurrentUser();\r\n    }, []);\r\n\r\n    const [isSaving, setIsSaving] = useState(false);\r\n    const switchSavingMode = useCallback(\r\n        () => setIsSaving((isSaving) => !isSaving),\r\n        []\r\n    );\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const switchEditingMode = useCallback(\r\n        () => setIsEditing((isEditing) => !isEditing),\r\n        []\r\n    );\r\n\r\n    useEffect(() => {\r\n        if(deleteItemId === 0) {\r\n          return;\r\n        }\r\n    \r\n        deleteLocation();\r\n      }, [deleteItemId]);\r\n\r\n    const getAllLocationsForCurrentUser = async () => {\r\n        const allTasks: Location[] = await getByRequestUrl(`${LocationService.GET_ALL_BY_USER_ID}${loggedUser.id}`);\r\n        setItems(getLocationForCurrentUser(allTasks));\r\n    };\r\n\r\n    const deleteLocation = async () => {\r\n        const location: LocationDetailsListItem = getSelectedItem() as LocationDetailsListItem;\r\n        const requestUrl: string = `${LocationService.DELETE_BY_ID}${location.id}`;\r\n        const message: string = await getByRequestUrl(requestUrl);\r\n    \r\n        if(message === \"Success\") {\r\n            getAllLocationsForCurrentUser();\r\n        }\r\n        else {\r\n          alert(\"An error has occurred on delete operation\");\r\n        }\r\n    };\r\n\r\n    const getSelectedItem = (): IObjectWithKey => {\r\n        return selectedItems![0];\r\n    };\r\n\r\n    const getTitle = (): string => {\r\n        return `${loggedUser.firstName}${\" \"}${loggedUser.lastName}${\"'s locations\"}`;\r\n    };\r\n\r\n    const getSelectedLocation = (): Location => {\r\n        const index = locations.findIndex((it) => it.id === selectedLocation.id);\r\n        return locations[index];\r\n    };\r\n\r\n    const isEditOrDeleteDisabled = (checkEdit: boolean): boolean => {\r\n        if (!selectedItems)\r\n            return true;\r\n    \r\n        if (checkEdit) {\r\n            if (selectedItems.length !== 1)\r\n                return true;\r\n        }\r\n        else\r\n            if (selectedItems.length < 1)\r\n                return true;\r\n        return false;\r\n      };\r\n\r\n    const onAddClicked = (): void => {\r\n        switchSavingMode();\r\n    };\r\n\r\n    const onEditClicked = (): void => {\r\n        if (locations.find((us) => us.id === selectedLocation.id) !== undefined) {\r\n            switchEditingMode();\r\n        }\r\n    };\r\n\r\n    const onDeleteClicked = (): void => {\r\n        const deleteLoc: LocationDetailsListItem = getSelectedItem() as LocationDetailsListItem;\r\n        setDeleteItemId(deleteLoc.id);\r\n    };\r\n\r\n    const updateMenuItems = (): IContextualMenuItem[] => {\r\n        return menuItems.map((item: IContextualMenuItem) => {\r\n            switch (item.key) {\r\n                case ADD:\r\n                    item.onClick = () => onAddClicked();\r\n                    item.style = enabledMenuItemStyle;\r\n                    break;\r\n                case EDIT:\r\n                    item.disabled = isEditOrDeleteDisabled(true);\r\n                    item.onClick = () => onEditClicked();\r\n                    item.style =\r\n                        selectedItems?.length === 1\r\n                            ? enabledMenuItemStyle\r\n                            : defaultMenuItemStyle;\r\n                    break;\r\n                case DELETE:\r\n                    item.disabled = isEditOrDeleteDisabled(false);\r\n                    item.onClick = () => onDeleteClicked();\r\n                    item.style =\r\n                        selectedItems?.length === 1\r\n                            ? enabledMenuItemStyle\r\n                            : defaultMenuItemStyle;\r\n                    break;\r\n                default:\r\n                    return item;\r\n            }\r\n            return item;\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n        {isSaving && (\r\n            <SaveLocationModal\r\n                switchMode={switchSavingMode}\r\n                items={items}\r\n                setItems={setItems}\r\n                locations={locations}\r\n                setLocations={setLocations}\r\n            />\r\n        )}\r\n        {isEditing && (\r\n            <EditUserStoryModal\r\n                switchMode={switchEditingMode}\r\n                location={getSelectedLocation()}\r\n                items={items}\r\n                setItems={setItems}\r\n                locations={locations}\r\n                setLocations={setLocations}\r\n            />\r\n         )}\r\n        <Stack className=\"hero is-fullheight has-background-dark\" tokens={setGapBetweenHeadersAndDetailsList}>\r\n            <Stack horizontal tokens={setGapBetweenHeadersAndUserInfo}>\r\n                <StackItem tokens={setGapBetweenHeaders}>\r\n                    <p className=\"title has-text-white is-size-5 has-text-left marginFH1\"> {getTitle()} </p>\r\n                    <p className=\"subtitle has-text-white is-size-3 marginFH2\"> {BACKLOG_TITLE} </p>\r\n                </StackItem>\r\n            </Stack>\r\n            <StackItem>\r\n                <ThemeProvider theme={transparentTheme}>\r\n                    <CommandBar items={updateMenuItems()} styles={commandBarStyles} />\r\n                    <DetailsList className=\"hero is-fullheight has-background-dark\"\r\n                        items={items}\r\n                        setKey=\"set\"\r\n                        columns={columns}\r\n                        selectionMode={SelectionMode.single}\r\n                        layoutMode={DetailsListLayoutMode.justified}\r\n                        selection={selection}\r\n                        selectionPreservedOnEmptyClick={true}\r\n                        onRenderItemColumn={renderItemColumn}>\r\n                    </DetailsList>\r\n                </ThemeProvider>\r\n            </StackItem>\r\n        </Stack>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Locations;\r\n"]},"metadata":{},"sourceType":"module"}